- name: Copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-enabled/{{ project_slug }}
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- name: get latest frontend code
  git:
    repo: "{{ frontend_repo }}"
    dest: "{{ frontend_path }}/.."
    key_file: "{{ backend_identity_file_path }}"
    accept_hostkey: true
    force: true
    version: "{{ frontend_branch }}"
  become_user: "{{ main_user }}"
  register: clonecode

- name: Get node_version
  shell: "cat {{ frontend_path }}/.nvmrc"
  register: node_version

- name: Install nvm
  ansible.builtin.shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

- name: Install node version {{ node_version.stdout }}
  shell: "source /root/.nvm/nvm.sh && nvm install {{ node_version.stdout }}"
  args:
    executable: /bin/bash
    creates: "{{ ansible_env.HOME }}/.nvm/{{ node_version.stdout }}_installed"

- name: Install project node dependencies with npm
  # yamllint disable-line rule:line-length
  shell: "source /root/.nvm/nvm.sh && nvm exec {{ node_version.stdout }} npm install"
  args:
    chdir: "{{ frontend_path }}"
    executable: /bin/bash
  when: clonecode.changed or force_update is defined

- name: Make sure project files have the right owner after installs
  file:
    path: "{{ frontend_path }}"
    owner: "{{ main_user }}"
    group: "{{ main_user }}"
    recurse: true
    state: directory
  when: clonecode.changed or force_update is defined

- name: add environment variable file
  template:
    src: frontend.env
    dest: "{{ frontend_path }}/.env"

###############################
# STATIC CONFIG
- name: Static config
  block:
    - name: Build frontend code for static rendering
      # yamllint disable-line rule:line-length
      shell: "source /root/.nvm/nvm.sh && nvm exec {{ node_version.stdout }} npm build-only"
      args:
        chdir: "{{ frontend_path }}"
        executable: /bin/bash
      when: clonecode.changed or force_update is defined
      register: build_code

    - debug: msg="{{ build_code.stdout }}"
      when: clonecode.changed  or force_update is defined

    - name: Update frontend static folder
      file:
        path: "{{ frontend_static_path }}"
        state: "{{ item }}"
        owner: www-data
        mode: "2755"
      with_items:
        - absent
        - directory
      when: clonecode.changed or force_update is defined

    - name: update frontend static folder content
      synchronize:
        src: "{{ frontend_path }}/dist/"
        dest: "{{ frontend_static_path }}/"
        rsync_opts:
          - "-og"
          - "--chown=www-data"
      delegate_to: "{{ inventory_hostname }}"
      when: clonecode.changed or force_update is defined

  when: frontend_mode == 'static'

###############################
# SSR CONFIG
- name: SSR config
  block:
    - name: Build frontend code for SSR
      # yamllint disable-line rule:line-length
      shell: "source /root/.nvm/nvm.sh && nvm exec {{ node_version.stdout }} npm build"
      args:
        chdir: "{{ frontend_path }}"
        executable: /bin/bash
      register: build_code
      when: clonecode.changed or force_update is defined

    - debug: msg="{{ build_code.stdout }}"
      when: clonecode.changed or force_update is defined

    - name: Copy supervisord config to {{ supervisor_conf }}/{{ project_slug }}_backend.conf
      template:
        src: frontend-supervisor.conf.j2
        dest: "{{ supervisor_conf }}/{{ project_slug }}_frontend.conf"
        owner: root
        group: root
        mode: 0644

    - name: Install {{ project_slug }}-frontend supervisor
      supervisorctl:
        name: "{{ project_slug }}-frontend"
        state: present

    - name: Restart {{ project_slug }}-frontend supervisor
      supervisorctl:
        name: "{{ project_slug }}-frontend"
        state: restarted
      when: clonecode.changed or force_update is defined

  when: frontend_mode == 'SSR'
