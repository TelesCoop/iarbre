- name: Copy nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-enabled/{{ project_slug }}-docs
    owner: root
    group: root
    mode: 0644
  notify:
    - reload nginx

- name: get latest docs code
  git:
    repo: "{{ frontend_repo }}"
    dest: "{{ docs_path }}"
    key_file: "{{ backend_identity_file_path }}"
    accept_hostkey: true
    force: true
    version: "{{ docs_branch }}"
  become_user: "{{ main_user }}"
  register: clonecode

- name: Create doc venv {{ venv.path }}
  command:
    cmd: python3 -m venv --system-site-packages {{ venv.path }}
    creates: "{{ venv.path }}/bin/python"
  become: true
  become_user: "{{ main_user }}"

- name: Install MkDocs and dependencies
  pip:
    name:
      - mkdocs
      - mkdocs-material
      - mkdocstrings[python]
    virtualenv: "{{ venv.path }}"

- name: Init documentation
  shell:
    cmd: "{{ venv.path }}/bin/mkdocs new . && touch doc_initialized"
    creates: "{{ docs_path }}/doc_initialized"
  args:
    chdir: "{{ docs_path }}"
  become_user: "{{ main_user }}"
  when: clonecode.changed or force_update is defined

- name: Build documentation
  command: "{{ venv.path }}/bin/mkdocs build --clean"
  args:
    chdir: "{{ docs_path }}"
  become_user: "{{ main_user }}"
  when: clonecode.changed or force_update is defined

- name: update docs static folder content
  synchronize:
    src: "{{ docs_path }}/site/"
    dest: "{{ docs_static_path }}/"
    rsync_opts:
      - "-a"
      - "--delete"
      - "--chown=www-data:www-data"
  delegate_to: "{{ inventory_hostname }}"
  when: clonecode.changed or force_update is defined
