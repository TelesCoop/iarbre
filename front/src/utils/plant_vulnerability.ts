import { PLANTABILITY_COLOR_MAP } from "./plantability"

export const PLANT_VULNERABILITY_BIVARIATE_COLOR_MAP: {
  [plantability: number]: { [vulnerability: number]: string }
} = {
  0: {
    1: "#8A9BB5",
    2: "#9AABB0",
    3: "#A8A8A8",
    4: "#B8A090",
    5: "#C89080"
  },

  1: {
    1: "#8A7A56",
    2: "#A5824A",
    3: "#BF5A16",
    4: "#D44820",
    5: "#E03528"
  },

  2: {
    1: "#B8C844",
    2: "#CCBA38",
    3: "#DDAD14",
    4: "#E89520",
    5: "#F07830"
  },

  3: {
    1: "#7AB8AA",
    2: "#8FC458",
    3: "#A6CC4A",
    4: "#B8C050",
    5: "#C8A855"
  },

  4: {
    1: "#4A9B80",
    2: "#52A765",
    3: "#55B250",
    4: "#68B045",
    5: "#78A540"
  }
}

export function getBivariateCoordinates(
  plantabilityScore: number,
  vulnerabilityScore: number
): { plantability: number; vulnerability: number } {
  // Map plantability from 0-10 scale to 0-4 scale (using floor to match MapLibre expression)
  const plantability = Math.min(4, Math.max(0, Math.floor(plantabilityScore / 2.5)))

  // Map vulnerability from 1-9 scale to 1-5 scale
  const vulnerability = Math.min(5, Math.max(1, 1 + Math.floor(((vulnerabilityScore - 1) / 8) * 4)))

  return { plantability, vulnerability }
}

export function getBivariateColor(plantabilityScore: number, vulnerabilityScore: number): string {
  const { plantability, vulnerability } = getBivariateCoordinates(
    plantabilityScore,
    vulnerabilityScore
  )
  return PLANT_VULNERABILITY_BIVARIATE_COLOR_MAP[plantability]?.[vulnerability] || "#C4C4C4"
}

// Flattened color lookup
const FLATTENED_COLOR_MAP: { [key: number]: string } = {}
for (let p = 0; p <= 4; p++) {
  for (let v = 1; v <= 5; v++) {
    FLATTENED_COLOR_MAP[p * 10 + v] = PLANT_VULNERABILITY_BIVARIATE_COLOR_MAP[p][v]
  }
}

// Generate MapLibre GL expression using flattened color lookup
export function generateBivariateColorExpression(): any[] {
  return [
    "case",
    ["!=", ["get", "vulnerability_indice_day"], null],
    [
      "step",
      [
        "+",
        ["*", ["min", 4, ["max", 0, ["floor", ["/", ["get", "indice"], 2.5]]]], 10],
        [
          "min",
          5,
          [
            "max",
            1,
            ["+", 1, ["floor", ["*", ["/", ["-", ["get", "vulnerability_indice_day"], 1], 8], 4]]]
          ]
        ]
      ],
      // Default fallback
      "#C4C4C4",
      ...Object.entries(FLATTENED_COLOR_MAP).flatMap(([key, color]) => [parseInt(key), color])
    ],
    ["match", ["get", "indice"], ...PLANTABILITY_COLOR_MAP]
  ]
}
