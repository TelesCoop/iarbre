import { PLANTABILITY_COLOR_MAP } from "./plantability"

// Simplified 5x5 Bivariate color mapping for Plant Vulnerability
// Combines plantability (0-4) with vulnerability (1-5)
export const PLANT_VULNERABILITY_BIVARIATE_COLOR_MAP: {
  [plantability: number]: { [vulnerability: number]: string }
} = {
  // Impossible (0) - Gray base with subtle vulnerability tint
  0: {
    1: "#B0B0B0", // Light gray
    2: "#A8A8A8", // Medium gray
    3: "#A0A0A0", // Darker gray
    4: "#989898", // Dark gray
    5: "#909090" // Darkest gray
  },

  // Constrained (1) - Brown-red base with vulnerability gradient
  1: {
    1: "#BF5A16", // Orange-brown
    2: "#B85A1A", // Darker orange-brown
    3: "#B8541E", // Brown-red
    4: "#B84E22", // Darker brown-red
    5: "#B83632" // Red-brown
  },

  // Neutral (2) - Yellow-orange base with vulnerability gradient
  2: {
    1: "#DDAD14", // Bright yellow
    2: "#D8A518", // Orange-yellow
    3: "#D39D1C", // Orange
    4: "#CE9520", // Dark orange
    5: "#BA7530" // Brown-orange
  },

  // Favored (3) - Light green base with vulnerability warming
  3: {
    1: "#A6CC4A", // Light green
    2: "#A4C84E", // Green
    3: "#A2C452", // Medium green
    4: "#9EBC5A", // Warmer green
    5: "#98B066" // Warm green
  },

  // Very Favored (4) - Dark green base with minimal vulnerability impact
  4: {
    1: "#55B250", // Bright green
    2: "#52AE4D", // Green
    3: "#4FAA4A", // Medium green
    4: "#4CA647", // Darker green
    5: "#40963B" // Dark green
  }
}

export function getBivariateColor(plantabilityScore: number, vulnerabilityScore: number): string {
  // Map plantability from 0-10 scale to 0-4 scale
  const plantability = Math.min(4, Math.max(0, Math.round(plantabilityScore / 2.5)))

  // Map vulnerability from 1-9 scale to 1-5 scale
  const vulnerability = Math.min(5, Math.max(1, Math.round(((vulnerabilityScore - 1) / 8) * 4) + 1))

  return PLANT_VULNERABILITY_BIVARIATE_COLOR_MAP[plantability]?.[vulnerability] || "#C4C4C4"
}

// Generate simplified MapLibre GL expression for bivariate mapping with 5x5 grid
export function generateBivariateColorExpression(): any[] {
  // Create expression using the new 5x5 bivariate colormap
  const expression: any[] = [
    "case",
    // Check if vulnerability field exists, if not just use plantability
    ["!=", ["get", "vulnerability_indice_day"], null],
    [
      "case",
      // Very Low vulnerability (1-2)
      ["<=", ["get", "vulnerability_indice_day"], 2],
      [
        "case",
        ["<=", ["get", "indice"], 2],
        "#B0B0B0", // Impossible
        ["<=", ["get", "indice"], 4],
        "#BF5A16", // Constrained
        ["<=", ["get", "indice"], 6],
        "#DDAD14", // Neutral
        ["<=", ["get", "indice"], 8],
        "#A6CC4A", // Favored
        "#55B250" // Very Favored
      ],

      // Low vulnerability (3-4)
      ["<=", ["get", "vulnerability_indice_day"], 4],
      [
        "case",
        ["<=", ["get", "indice"], 2],
        "#A0A0A0", // Impossible
        ["<=", ["get", "indice"], 4],
        "#B8541E", // Constrained
        ["<=", ["get", "indice"], 6],
        "#D39D1C", // Neutral
        ["<=", ["get", "indice"], 8],
        "#A2C452", // Favored
        "#4FAA4A" // Very Favored
      ],

      // Medium vulnerability (5-6)
      ["<=", ["get", "vulnerability_indice_day"], 6],
      [
        "case",
        ["<=", ["get", "indice"], 2],
        "#989898", // Impossible
        ["<=", ["get", "indice"], 4],
        "#B84E22", // Constrained
        ["<=", ["get", "indice"], 6],
        "#CE9520", // Neutral
        ["<=", ["get", "indice"], 8],
        "#9EBC5A", // Favored
        "#4CA647" // Very Favored
      ],

      // High vulnerability (7-8)
      ["<=", ["get", "vulnerability_indice_day"], 8],
      [
        "case",
        ["<=", ["get", "indice"], 2],
        "#909090", // Impossible
        ["<=", ["get", "indice"], 4],
        "#B83632", // Constrained
        ["<=", ["get", "indice"], 6],
        "#BA7530", // Neutral
        ["<=", ["get", "indice"], 8],
        "#98B066", // Favored
        "#40963B" // Very Favored
      ],

      // Very High vulnerability (9)
      [
        "case",
        ["<=", ["get", "indice"], 2],
        "#909090", // Impossible
        ["<=", ["get", "indice"], 4],
        "#B83632", // Constrained
        ["<=", ["get", "indice"], 6],
        "#BA7530", // Neutral
        ["<=", ["get", "indice"], 8],
        "#98B066", // Favored
        "#40963B" // Very Favored
      ]
    ],
    // Fallback to plantability only
    ["match", ["get", "indice"], ...PLANTABILITY_COLOR_MAP]
  ]

  return expression
}
