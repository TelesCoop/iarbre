import VulnerabilityContextDataScoreBadge from "@/components/contextData/vulnerability/VulnerabilityContextDataScoreBadge.vue"
import ScoreTag from "@/components/ScoreTag.vue"
import { createPinia, setActivePinia } from "pinia"
import { VulnerabilityCategory } from "@/utils/enum"
import { VulnerabilityMode } from "@/utils/vulnerability"

describe("VulnerabilityContextDataScoreBadge.vue", () => {
  beforeEach(() => {
    setActivePinia(createPinia())
  })

  it("renders scores for both day and night modes", () => {
    const getCategoryScore = (category: VulnerabilityCategory, mode: VulnerabilityMode) => {
      return mode === VulnerabilityMode.DAY ? 2 : 1
    }

    cy.mount(VulnerabilityContextDataScoreBadge, {
      props: {
        category: VulnerabilityCategory.EXPOSURE,
        getCategoryScore
      },
      global: {
        components: {
          ScoreTag
        }
      }
    })

    cy.get('[data-cy="score-tag"]').should("have.length", 2)
  })

  it("displays N/A when score is null", () => {
    const getCategoryScore = () => null

    cy.mount(VulnerabilityContextDataScoreBadge, {
      props: {
        category: VulnerabilityCategory.EXPOSURE,
        getCategoryScore
      },
      global: {
        components: {
          ScoreTag
        }
      }
    })

    cy.contains("N/A").should("have.length", 2)
  })

  it("handles mixed null and numeric scores", () => {
    const getCategoryScore = (category: VulnerabilityCategory, mode: VulnerabilityMode) => {
      return mode === VulnerabilityMode.DAY ? 2 : null
    }

    cy.mount(VulnerabilityContextDataScoreBadge, {
      props: {
        category: VulnerabilityCategory.SENSITIVITY,
        getCategoryScore
      },
      global: {
        components: {
          ScoreTag
        }
      }
    })

    cy.get('[data-cy="score-tag"]').should("have.length", 1)
    cy.contains("N/A").should("have.length", 1)
  })

  it("renders with different category types", () => {
    const getCategoryScore = () => 3

    const categories = [
      VulnerabilityCategory.EXPOSURE,
      VulnerabilityCategory.SENSITIVITY,
      VulnerabilityCategory.DIFFICULTY
    ]

    categories.forEach((category) => {
      cy.mount(VulnerabilityContextDataScoreBadge, {
        props: {
          category,
          getCategoryScore
        },
        global: {
          components: {
            ScoreTag
          }
        }
      })

      cy.get('[data-cy="score-tag"]').should("have.length", 2)
    })
  })

  it("handles zero scores", () => {
    const getCategoryScore = () => 0

    cy.mount(VulnerabilityContextDataScoreBadge, {
      props: {
        category: VulnerabilityCategory.EXPOSURE,
        getCategoryScore
      },
      global: {
        components: {
          ScoreTag
        }
      }
    })

    cy.get('[data-cy="score-tag"]').should("have.length", 2)
  })

  it("handles maximum scores", () => {
    const getCategoryScore = () => 3

    cy.mount(VulnerabilityContextDataScoreBadge, {
      props: {
        category: VulnerabilityCategory.EXPOSURE,
        getCategoryScore
      },
      global: {
        components: {
          ScoreTag
        }
      }
    })

    cy.get('[data-cy="score-tag"]').should("have.length", 2)
  })
})
