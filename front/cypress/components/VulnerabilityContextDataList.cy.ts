/// <reference types="cypress" />
import { createPinia } from "pinia"
import { mount } from "cypress/vue"
import VulnerabilityContextDataList from "@/components/contextData/vulnerability/VulnerabilityContextDataList.vue"
import { VulnerabilityCategory } from "@/utils/enum"

describe("VulnerabilityContextDataList", () => {
  const mockData = {
    expoIndexDay: 2,
    expoIndexNight: 1,
    capafIndexDay: 3,
    capafIndexNight: 2,
    sensibiltyIndexDay: 2,
    sensibiltyIndexNight: 1
  }

  const mockFactors = [
    {
      id: "factor-1",
      label: "Temperature",
      category: VulnerabilityCategory.EXPOSITION,
      dayScore: 2,
      nightScore: 1
    },
    {
      id: "factor-2",
      label: "Humidity",
      category: VulnerabilityCategory.SENSIBILITY,
      dayScore: 2,
      nightScore: 1
    }
  ]

  const getScoreColor = (score: number) => "#ff0000"
  const getScoreLabel = (score: number) => `Score: ${score}`
  const getFactorDescription = (factorId: string) => `Description for ${factorId}`

  it("renders vulnerability list with factors", () => {
    const pinia = createPinia()

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        factorsWithScores: mockFactors,
        getScoreColor,
        getScoreLabel,
        getFactorDescription,
        data: mockData
      }
    })

    cy.get('[aria-label="Liste des facteurs de vulnérabilité par catégorie"]').should("exist")
  })

  it("displays category labels", () => {
    const pinia = createPinia()

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        factorsWithScores: mockFactors,
        getScoreColor,
        getScoreLabel,
        getFactorDescription,
        data: mockData
      }
    })

    cy.contains("Exposition").should("exist")
  })

  it("displays factors within categories", () => {
    const pinia = createPinia()

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        factorsWithScores: mockFactors,
        getScoreColor,
        getScoreLabel,
        getFactorDescription,
        data: mockData
      }
    })

    cy.get(`[data-cy="category-${VulnerabilityCategory.EXPOSITION}"]`).click()
    cy.contains("Temperature").should("be.visible")
  })

  it("handles empty factors array", () => {
    const pinia = createPinia()

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        factorsWithScores: [],
        getScoreColor,
        getScoreLabel,
        getFactorDescription,
        data: mockData
      }
    })

    cy.get('[aria-label="Liste des facteurs de vulnérabilité par catégorie"]').should("exist")
  })

  it("shows high vulnerability scores", () => {
    const pinia = createPinia()
    const highVulnerabilityData = {
      expoIndexDay: 3,
      expoIndexNight: 3,
      capafIndexDay: 3,
      capafIndexNight: 3,
      sensibiltyIndexDay: 3,
      sensibiltyIndexNight: 3
    }

    const highFactors = [
      {
        id: "high-factor",
        label: "High Risk Factor",
        category: VulnerabilityCategory.EXPOSITION,
        dayScore: 3,
        nightScore: 3
      }
    ]

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        factorsWithScores: highFactors,
        getScoreColor,
        getScoreLabel,
        getFactorDescription,
        data: highVulnerabilityData
      }
    })

    cy.get('[aria-label="Liste des facteurs de vulnérabilité par catégorie"]').should("exist")
  })

  it("shows low vulnerability scores", () => {
    const pinia = createPinia()
    const lowVulnerabilityData = {
      expoIndexDay: 1,
      expoIndexNight: 1,
      capafIndexDay: 1,
      capafIndexNight: 1,
      sensibiltyIndexDay: 1,
      sensibiltyIndexNight: 1
    }

    const lowFactors = [
      {
        id: "low-factor",
        label: "Low Risk Factor",
        category: VulnerabilityCategory.CAPACITY_TO_FACE,
        dayScore: 1,
        nightScore: 1
      }
    ]

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        factorsWithScores: lowFactors,
        getScoreColor,
        getScoreLabel,
        getFactorDescription,
        data: lowVulnerabilityData
      }
    })

    cy.get('[aria-label="Liste des facteurs de vulnérabilité par catégorie"]').should("exist")
  })
})
