/// <reference types="cypress" />
import { createPinia } from "pinia"
import { mount } from "cypress/vue"
import VulnerabilityContextDataList from "@/components/contextData/vulnerability/VulnerabilityContextDataList.vue"
import { DataType, GeoLevel } from "@/utils/enum"

describe("VulnerabilityContextDataList", () => {
  it("renders empty state when no data", () => {
    const pinia = createPinia()

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        data: null
      }
    })

    cy.contains("Aucune donnée disponible")
  })

  it("renders vulnerability data", () => {
    const pinia = createPinia()
    const mockData = {
      vulnerabilityIndice: 0.75,
      exposition: 0.8,
      difficulte: 0.7,
      sensibilite: 0.75,
      geolevel: GeoLevel.TILE,
      datatype: DataType.VULNERABILITY
    }

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        data: mockData
      }
    })

    cy.getBySel("vulnerability-list").should("exist")
  })

  it("displays vulnerability score", () => {
    const pinia = createPinia()
    const mockData = {
      vulnerabilityIndice: 0.75,
      exposition: 0.8,
      difficulte: 0.7,
      sensibilite: 0.75,
      geolevel: GeoLevel.TILE,
      datatype: DataType.VULNERABILITY
    }

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        data: mockData
      }
    })

    cy.getBySel("vulnerability-score").should("exist")
  })

  it("displays exposure, difficulty and sensitivity", () => {
    const pinia = createPinia()
    const mockData = {
      vulnerabilityIndice: 0.75,
      exposition: 0.8,
      difficulte: 0.7,
      sensibilite: 0.75,
      geolevel: GeoLevel.TILE,
      datatype: DataType.VULNERABILITY
    }

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        data: mockData
      }
    })

    cy.contains("Exposition").should("exist")
    cy.contains("Difficulté").should("exist")
    cy.contains("Sensibilité").should("exist")
  })

  it("shows correct vulnerability classification", () => {
    const pinia = createPinia()
    const highVulnerabilityData = {
      vulnerabilityIndice: 0.9,
      exposition: 0.9,
      difficulte: 0.9,
      sensibilite: 0.9,
      geolevel: GeoLevel.TILE,
      datatype: DataType.VULNERABILITY
    }

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        data: highVulnerabilityData
      }
    })

    cy.getBySel("vulnerability-list").should("exist")
  })

  it("handles low vulnerability data", () => {
    const pinia = createPinia()
    const lowVulnerabilityData = {
      vulnerabilityIndice: 0.2,
      exposition: 0.2,
      difficulte: 0.2,
      sensibilite: 0.2,
      geolevel: GeoLevel.TILE,
      datatype: DataType.VULNERABILITY
    }

    mount(VulnerabilityContextDataList, {
      global: {
        plugins: [pinia]
      },
      props: {
        data: lowVulnerabilityData
      }
    })

    cy.getBySel("vulnerability-list").should("exist")
  })
})
